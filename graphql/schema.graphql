### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Mutation {
  createProduct(description: String!, imageUrl: String!, price: String!, title: String!): Product!
  updateProduct(available: Boolean, description: String, id: String, imageUrl: String, price: String, title: String): Product!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Product {
  available: Boolean
  description: String
  id: String
  imageUrl: String
  index: Int
  price: String
  title: String
  user: User
}

type ProductConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProductEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProductEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Product
}

type Query {
  product(id: String!): Product!
  products(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    searchText: String
  ): ProductConnection
}

enum Role {
  PROVIDER
  SELLER
}

type User {
  company: String
  email: String
  id: String
  image: String
  name: String
  products: [Product]
  role: Role
}
